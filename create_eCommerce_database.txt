 CREATE DATABASE IF NOT EXISTS eCommerce;
 CREATE TABLE IF NOT EXISTS eCommerce.clients (client_id INT auto_increment, first_name VARCHAR(45) NOT NULL, family_name VARCHAR(45) NOT NULL, email VARCHAR(45) NOT NULL, password VARCHAR(45) NOT NULL, address VARCHAR(100) NOT NULL, phone VARCHAR(45) NOT NULL, money DOUBLE, CONSTRAINT client_id_PK PRIMARY KEY(client_id));
 CREATE TABLE IF NOT EXISTS eCommerce.product_types (type_id INT auto_increment, type VARCHAR(45) NOT NULL, CONSTRAINT type_id_PK PRIMARY KEY(type_id));
 CREATE TABLE IF NOT EXISTS eCommerce.products (product_id INT auto_increment, producer VARCHAR(45) NOT NULL, model VARCHAR(45) NOT NULL, price DOUBLE, info MEDIUMTEXT, quantity INT, img_url VARCHAR(100), type_id INT, CONSTRAINT product_id_PK PRIMARY KEY(product_id), CONSTRAINT type_id_FK FOREIGN KEY(type_id) REFERENCES eCommerce.product_types(type_id));
 CREATE TABLE IF NOT EXISTS eCommerce.products_in_carts (client_id INT, product_id INT, quantity_in_cart INT, CONSTRAINT products_in_carts_PK PRIMARY KEY(client_id, product_id), CONSTRAINT client_id_cart_FK FOREIGN KEY(client_id) REFERENCES eCommerce.clients(client_id), CONSTRAINT product_id_cart_FK FOREIGN KEY(product_id) REFERENCES eCommerce.products(product_id));
 CREATE TABLE IF NOT EXISTS eCommerce.cases (product_id INT, case_form VARCHAR(45) NOT NULL, case_size VARCHAR(45) NOT NULL, CONSTRAINT product_id_cases_PK PRIMARY KEY(product_id), CONSTRAINT product_id_cases_FK FOREIGN KEY(product_id) REFERENCES eCommerce.products(product_id));
 CREATE TABLE IF NOT EXISTS eCommerce.cpus (product_id INT, number_of_cores INT NOT NULL, clock_speed DOUBLE NOT NULL, cpu_socket VARCHAR(45) NOT NULL, CONSTRAINT product_id_cpus_PK PRIMARY KEY(product_id), CONSTRAINT product_id_cpus_FK FOREIGN KEY(product_id) REFERENCES eCommerce.products(product_id));
 CREATE TABLE IF NOT EXISTS eCommerce.gpus (product_id INT, memory_size INT NOT NULL, max_resolution VARCHAR(45) NOT NULL, output_interface VARCHAR(45) NOT NULL, CONSTRAINT product_id_gpus_PK PRIMARY KEY(product_id), CONSTRAINT product_id_gpus_FK FOREIGN KEY(product_id) REFERENCES eCommerce.products(product_id));
 CREATE TABLE IF NOT EXISTS eCommerce.hard_drives (product_id INT, hd_type VARCHAR(45), size DOUBLE NOT NULL, capacity INT NOT NULL, CONSTRAINT product_id_hds_PK PRIMARY KEY(product_id), CONSTRAINT product_id_hds_FK FOREIGN KEY(product_id) REFERENCES eCommerce.products(product_id));
 CREATE TABLE IF NOT EXISTS eCommerce.monitors (product_id INT, size DOUBLE NOT NULL, refresh_rate INT NOT NULL, matrix_type VARCHAR(45) NOT NULL, CONSTRAINT product_id_mons_PK PRIMARY KEY(product_id), CONSTRAINT product_id_mons_FK FOREIGN KEY(product_id) REFERENCES eCommerce.products(product_id));
 CREATE TABLE IF NOT EXISTS eCommerce.mother_boards (product_id INT, chipset VARCHAR(45) NOT NULL, ram_slots INT NOT NULL, socket VARCHAR(45) NOT NULL, CONSTRAINT product_id_mbs_PK PRIMARY KEY(product_id), CONSTRAINT product_id_mbs_FK FOREIGN KEY(product_id) REFERENCES eCommerce.products(product_id));
 CREATE TABLE IF NOT EXISTS eCommerce.rams (product_id INT, ram_type VARCHAR(45) NOT NULL, size INT NOT NULL, CONSTRAINT product_id_rams_PK PRIMARY KEY(product_id), CONSTRAINT product_id_rams_FK FOREIGN KEY(product_id) REFERENCES eCommerce.products(product_id));
 CREATE TABLE IF NOT EXISTS eCommerce.admins (admin_id INT auto_increment, email VARCHAR(45) NOT NULL, password VARCHAR(45) NOT NULL, CONSTRAINT admin_id_PK PRIMARY KEY(admin_id));